from discord.ext import commands
from discord.commands import slash_command, Option, OptionChoice  # Importaciones necesarias para los comandos slash
import discord
# Importaciones de tus funciones de conexiÃ³n a la base de datos
from ...environments.connection import create_connection, close_connection

def register_commands(bot):
    @bot.slash_command(name="ceo", description="Muestra quiÃ©n es el CEO")
    async def ceo(ctx):
        await ctx.respond("The CEO of this project is ArturoTF")

    @bot.slash_command(name="languages", description="Muestra los idiomas disponibles para traducciÃ³n")
    async def languages(ctx):
        language_list = "ğŸ‡¬ğŸ‡§, ğŸ‡ªğŸ‡¸, ğŸ‡©ğŸ‡ª, ğŸ‡·ğŸ‡º, ğŸ‡µğŸ‡¹, ğŸ‡»ğŸ‡³, ğŸ‡¨ğŸ‡³, ğŸ‡®ğŸ‡¹, ğŸ‡ºğŸ‡¸, ğŸ‡µğŸ‡±,ğŸ‡ºğŸ‡¸,ğŸ‡·ğŸ‡¸,ğŸ‡¯ğŸ‡µ"
        await ctx.respond(f"Languages available for translation: {language_list}")

    # Diccionario de opciones de idiomas y sus banderas
    language_options = {
    'English': 'ğŸ‡¬ğŸ‡§',
    'Spanish': 'ğŸ‡ªğŸ‡¸',
    'German': 'ğŸ‡©ğŸ‡ª',
    'Russian': 'ğŸ‡·ğŸ‡º',
    'Portuguese': 'ğŸ‡µğŸ‡¹',
    'Vietnamese': 'ğŸ‡»ğŸ‡³',
    'Chinese': 'ğŸ‡¨ğŸ‡³',
    'Italian': 'ğŸ‡®ğŸ‡¹',
    'French': 'ğŸ‡«ğŸ‡·',
    'Polish': 'ğŸ‡µğŸ‡±',
    'American English': 'ğŸ‡ºğŸ‡¸',
    'Serbian': 'ğŸ‡·ğŸ‡¸',
    'Japanese': 'ğŸ‡¯ğŸ‡µ',
    }


    @bot.slash_command(name="language", description="Select your language")
    async def language(ctx, idioma: discord.Option(str, "Elige tu idioma", choices=[OptionChoice(name=f"{name} {flag}", value=name) for name, flag in language_options.items()])):
        # AquÃ­ se maneja el comando y se guarda en la base de datos
        user_name = ctx.author.name

        # Conecta a la base de datos y guarda la selecciÃ³n del idioma
        connection = create_connection()
        cursor = connection.cursor()
        cursor.execute(
            "INSERT INTO usuarios_idioma (name, idioma) VALUES (%s, %s) ON DUPLICATE KEY UPDATE idioma = %s",
            (user_name, idioma, idioma)
        )
        connection.commit()
        close_connection(connection)

        # EnvÃ­a una respuesta al usuario con la bandera del idioma seleccionado
        await ctx.respond(f"{ctx.author.mention}, tu idioma se ha establecido a {language_options[idioma]}")

