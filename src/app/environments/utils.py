import os
from ..environments.connection import create_connection, close_connection
from ..environments.connection import create_connection, close_connection

def get_user_language(user_id):
    try:
        connection = create_connection()
        if connection is not None:
            cursor = connection.cursor()
            query = "SELECT idioma FROM usuarios_idioma WHERE user_id = %s"
            cursor.execute(query, (user_id,))
            result = cursor.fetchone()
            cursor.close()
            print(result[0])
            if result:
                return result[0]
            else:
                return 'en'
        else:
            return 'en'
    except Error as e:
        print(f"Error al obtener el idioma del usuario: {e}")
        return 'en'
    finally:
        if connection and connection.is_connected():
            close_connection(connection)



# Diccionario de banderas con cÃ³digos de idioma correspondientes -> banderaDiscord : valor. Puedo aÃ±adir todos los que quiera
emoji_flags = {
    'ğŸ‡¬ğŸ‡§': 'en',  # InglÃ©s
    'ğŸ‡ªğŸ‡¸': 'es',  # EspaÃ±ol
    'ğŸ‡©ğŸ‡ª': 'de',  # AlemÃ¡n
    'ğŸ‡·ğŸ‡º': 'ru',  # Ruso
    'ğŸ‡µğŸ‡¹': 'pt',  # PortuguÃ©s
    'ğŸ‡»ğŸ‡³': 'vi',  # Vietnamita
    'ğŸ‡¨ğŸ‡³': 'zh-cn', # Chino (simplificado)
    'ğŸ‡®ğŸ‡¹': 'it',  # Italiano
    'ğŸ‡«ğŸ‡·': 'fr',  # FrancÃ©s
    'ğŸ‡µğŸ‡±': 'pl',  # Polaco
    'ğŸ‡ºğŸ‡¸': 'en',  # InglÃ©s Americano
    'ğŸ‡·ğŸ‡¸': 'sr',  # Serbio
    'ğŸ‡¯ğŸ‡µ': 'ja',  # JaponÃ©s
}
